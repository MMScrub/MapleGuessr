<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>MapleGuessr</title>
<style>
  body { font-family: Arial, sans-serif; background: #1a1a1a; color: #f0f0f0; text-align: center; padding: 20px; }
  .menu { display: flex; flex-direction: column; align-items: center; gap: 15px; margin-top: 50px; }
  .menu button { padding: 14px 20px; font-size: 18px; border: none; border-radius: 8px; cursor: pointer; width: 200px; background-color: #444; color: white; }
  .menu button:hover { background-color: #666; }
  .wip { font-size: 12px; color: #aaa; margin-top: 4px; }
  .game-container { display: none; max-width: 400px; margin: auto; }
  input { padding: 8px; width: 200px; margin-top: 10px; border-radius: 6px; border: none; }
  button#submit-btn { padding: 8px 14px; margin-left: 5px; cursor: pointer; background: #6d88ff; border: none; border-radius: 6px; color: white; }
  ul#guess-history { list-style: none; padding: 0; margin-top: 15px; }
  ul#guess-history li { background: #333; padding: 6px; margin: 4px auto; border-radius: 4px; width: 250px; }
  #suggestions { list-style: none; background: #2a2a2a; padding: 0; margin: 0 auto; width: 220px; border-radius: 4px; text-align: left; }
  #suggestions li { padding: 6px; cursor: pointer; }
  #suggestions li:hover { background-color: #444; }
</style>
</head>
<body>

<h1>MapleGuessr</h1>

<!-- Main Menu -->
<div id="menu" class="menu">
  <div>
    <button id="play-items">Items</button>
  </div>
  <div>
    <button disabled>NPCs</button>
    <div class="wip">(WIP)</div>
  </div>
  <div>
    <button disabled>Bosses</button>
    <div class="wip">(WIP)</div>
  </div>
</div>

<!-- Game Screen -->
<div id="game" class="game-container">
  <h2 id="game-title">Items</h2>
  <input type="text" id="guess-input" placeholder="Enter your guess..." autocomplete="off" />
  <ul id="suggestions"></ul>
  <button id="submit-btn">Submit</button>
  <ul id="guess-history"></ul>
  <p id="result"></p>
</div>

<script>
// ================= DATA =================
const items = [
  "Zakum Helmet","Maple Claw","Maple Skanda","Stonetooth Sword","Maple Soul Singer",
  "Green Christmas Sock","Dark Scroll for Claw for ATT","Scroll for Overall for DEX",
  "Scroll for Overall for INT","Scroll for Cape for LUK","Scroll for Earring for INT",
  "Scroll for Shield for Magic Attack","Stormcaster Gloves","Work Gloves","Onyx Apple",
  "Heartstopper","Warrior Elixir","Wizard Elixir"
];

// ================= MENU LOGIC =================
document.getElementById("play-items").addEventListener("click", () => {
  document.getElementById("menu").style.display = "none";
  document.getElementById("game").style.display = "block";
  startGame(items);
});

// ================= GAME FUNCTION =================
function startGame(pool) {
  const todayIndex = new Date().getDate() % pool.length;
  const answer = pool[todayIndex].toLowerCase();
  let guesses = JSON.parse(localStorage.getItem("guesses_items")) || [];

  const guessInput = document.getElementById("guess-input");
  const submitBtn = document.getElementById("submit-btn");
  const guessHistory = document.getElementById("guess-history");
  const result = document.getElementById("result");
  const suggestionBox = document.getElementById("suggestions");

  guessHistory.innerHTML = "";
  guesses.forEach(g => addGuessToHistory(g));

  function addGuessToHistory(guess) {
    const li = document.createElement("li");
    li.textContent = guess;
    guessHistory.appendChild(li);
  }

  guessInput.addEventListener("input", () => {
    const val = guessInput.value.trim().toLowerCase();
    suggestionBox.innerHTML = "";
    if (!val) return;
    const matches = pool.filter(e => e.toLowerCase().includes(val));
    matches.slice(0, 8).forEach(match => {
      const li = document.createElement("li");
      li.textContent = match;
      li.onclick = () => {
        guessInput.value = match;
        suggestionBox.innerHTML = "";
      };
      suggestionBox.appendChild(li);
    });
  });

  submitBtn.addEventListener("click", () => {
    const userGuess = guessInput.value.trim().toLowerCase();
    if (!userGuess) return;
    if (guesses.includes(userGuess)) {
      alert("Already guessed that!");
      return;
    }
    guesses.push(userGuess);
    localStorage.setItem("guesses_items", JSON.stringify(guesses));
    addGuessToHistory(userGuess);

    if (userGuess === answer) {
      result.textContent = `üéâ Correct! You got it in ${guesses.length} guesses.`;
      result.style.color = "#6dff6d";
    } else {
      result.textContent = "‚ùå Not quite, try again.";
      result.style.color = "#ff7a7a";
    }
    guessInput.value = "";
    suggestionBox.innerHTML = "";
  });
}
</script>

</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>MapleGuessr</title>
<style>
  body { font-family: Arial, sans-serif; background: #1a1a1a; color: #f0f0f0; text-align: center; padding: 20px; }
  .category-buttons { display: flex; justify-content: center; gap: 10px; margin: 15px 0; }
  .category-buttons button { padding: 10px 16px; border: none; border-radius: 6px; cursor: pointer; background-color: #444; color: white; }
  .category-buttons button.active { background-color: #6d88ff; }
  input { padding: 8px; width: 200px; margin-top: 10px; }
  button#submit-btn { padding: 8px 14px; margin-left: 5px; cursor: pointer; }
  ul#guess-history { list-style: none; padding: 0; margin-top: 15px; }
  ul#guess-history li { background: #333; padding: 6px; margin: 4px auto; border-radius: 4px; width: 250px; }
  #suggestions { list-style: none; background: #2a2a2a; padding: 0; margin: 0 auto; width: 220px; border-radius: 4px; text-align: left; }
  #suggestions li { padding: 6px; cursor: pointer; }
  #suggestions li:hover { background: #444; }
</style>
</head>
<body>

<h1>MapleGuessr</h1>
<p>Guess the daily Maple item, NPC, or boss!</p>

<div class="category-buttons">
  <button data-category="item">Items</button>
  <button data-category="npc">NPCs</button>
  <button data-category="boss">Bosses</button>
</div>

<input type="text" id="guess-input" placeholder="Enter your guess..." autocomplete="off" />
<ul id="suggestions"></ul>
<button id="submit-btn">Submit</button>

<ul id="guess-history"></ul>
<p id="result"></p>

<script>
// ================= DATA =================
const gameCategories = {
  item: [
    "Zakum Helmet","Maple Claw","Maple Skanda","Stonetooth Sword","Maple Soul Singer",
    "Green Christmas Sock","Dark Scroll for Claw for ATT","Scroll for Overall for DEX",
    "Scroll for Overall for INT","Scroll for Cape for LUK","Scroll for Earring for INT",
    "Scroll for Shield for Magic Attack","Stormcaster Gloves","Work Gloves","Onyx Apple",
    "Heartstopper","Warrior Elixir","Wizard Elixir"
  ],
  npc: [
    "Grendel the Really Old","Athena Pierce","Dances with Balrog","Dark Lord","Cody",
    "Spinel","Chief Tatamo","Moira","Maple Administrator"
  ],
  boss: [
    "Zakum","Papulatus","Bigfoot","Anego","Pianus","Crimsonwood Margana",
    "Headless Horseman","Ravana","Scarlion","Targa","Mano","Stumpy","Faust",
    "Ephenia","Chaos Zakum","Chaos Papulatus"
  ]
};

// ================= GAME STATE =================
let activeCategory = localStorage.getItem("category") || "item";
let pool = gameCategories[activeCategory];
const todayIndex = new Date().getDate() % pool.length;
const answer = pool[todayIndex].toLowerCase();
let guesses = JSON.parse(localStorage.getItem("guesses_" + activeCategory)) || [];

// ================= UI ELEMENTS =================
const categoryButtons = document.querySelectorAll('.category-buttons button');
const guessInput = document.getElementById("guess-input");
const submitBtn = document.getElementById("submit-btn");
const guessHistory = document.getElementById("guess-history");
const result = document.getElementById("result");
const suggestionBox = document.getElementById("suggestions");

// ================= CATEGORY BUTTONS =================
categoryButtons.forEach(btn => {
  if (btn.dataset.category === activeCategory) btn.classList.add("active");
  btn.addEventListener("click", () => {
    localStorage.setItem("category", btn.dataset.category);
    location.reload();
  });
});

// ================= SUGGESTIONS =================
guessInput.addEventListener("input", () => {
  const val = guessInput.value.trim().toLowerCase();
  suggestionBox.innerHTML = "";
  if (!val) return;
  const matches = pool.filter(e => e.toLowerCase().includes(val));
  matches.slice(0, 8).forEach(match => {
    const li = document.createElement("li");
    li.textContent = match;
    li.onclick = () => {
      guessInput.value = match;
      suggestionBox.innerHTML = "";
    };
    suggestionBox.appendChild(li);
  });
});

// ================= SUBMIT GUESS =================
submitBtn.addEventListener("click", () => {
  const userGuess = guessInput.value.trim().toLowerCase();
  if (!userGuess) return;
  if (guesses.includes(userGuess)) {
    alert("Already guessed that!");
    return;
  }
  guesses.push(userGuess);
  localStorage.setItem("guesses_" + activeCategory, JSON.stringify(guesses));
  addGuessToHistory(userGuess);

  if (userGuess === answer) {
    result.textContent = `🎉 Correct! You got it in ${guesses.length} guesses.`;
    result.style.color = "#6dff6d";
  } else {
    result.textContent = "❌ Not quite, try again.";
    result.style.color = "#ff7a7a";
  }
  guessInput.value = "";
  suggestionBox.innerHTML = "";
});

// ================= HISTORY =================
function addGuessToHistory(guess) {
  const li = document.createElement("li");
  li.textContent = guess;
  guessHistory.appendChild(li);
}

// Load previous guesses
guesses.forEach(g => addGuessToHistory(g));

</script>

</body>
</html>
